---
cache: true
filename: master.jade
---

- var pathName = function(path, m) { if(!m) { m = menu } return m + "__" + path.join('__').replace(/\s/g, '_'); }
- var getTopLevel = function(collection) { if(!collection || !config[menu]) { return null; } for (var i = 0; i < config[menu].length; i++) { current = config[menu][i]; if (collection.indexOf(pathName([current.name])) != -1) { return current; } if (current.children) { for (var j = 0; j < current.children.length; j++) { if (collection.indexOf(pathName([current.name, current.children[j].name])) != -1) { return current; } } } } return null; }
- // TODO
- var topLevel = getTopLevel(partOfCollections);
- var getFirstPage = function(item, path) { if(!path) { path = [] } path.push(item.name); var page = null; var collection = collections[pathName(path)]; if(collection) { page = collection[0]; } if(page != null) { return page } else { if(item.children && item.children.length > 0) { return getFirstPage(item.children[0], path); } else { return null; } } }



doctype html
html
  head
    meta(charset="utf-8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    meta(name="viewport", content="width=device-width, minimum-scale=1.0, maximum-scale=1.0")
    meta(name="description", content=config.description)
    meta(name="keywords", content=config.keywords)
    meta(name="author", content=config.author)

    title #{title} | Web Design Guide
    link(rel="stylesheet", href=relative("/css/docs.css"))

    script(src=relative('/js/jquery/jquery.min.js'))
    script(src=relative('/js/knockout/knockout-latest.js'))
    script(src=relative('/js/urijs/URI.min.js'))
    script(src=relative('/js/localforage/localforage.min.js'))
    script(src=relative('/js/moment/moment.min.js'))
    script(src=relative('/js/zeroclipboard/ZeroClipboard.min.js'))
    script(src=relative('/js/fontfaceobserver/fontfaceobserver.standalone.js'))

    script(src='http://fast.fonts.net/jsapi/1da4c08a-73a4-4e34-8997-1c1eeb1a8cca.js', async)

    script(type='text/javascript').
      // Include the UserVoice JavaScript SDK (only needed once on a page)
      UserVoice=window.UserVoice||[];
      UserVoice.push(['set', {
        accent_color: '#103184',
        screenshot_enabled: false
      }]);
      (function(){
        var uv=document.createElement('script');
        uv.type='text/javascript';
        uv.async=true;
        uv.src='//widget.uservoice.com/O8ex403PfbC0GjKz3DuQ.js';
        var s=document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(uv,s)
      })();

    script(src=relative("/js/axa-wsg.jquery.all.js"))
    script(src=relative("/js/api.js"))
    script(src=relative("/js/github-integration.js"))
    script(src=relative("/js/main.js"))
    script(src=relative("/js/left-navigation.js"))
    script(src=relative("/js/octocat.js"))
    script(src=relative("/js/webfont.js"))

  body.site
    .site__page
      .l-container
        .docs-floating-action
          a(href='#feedback', data-uv-trigger).docs-floating-action__button.button.button--floating.icon.icon--feedback
      header.header
        .header__container.l-container
          .header__mobile-trigger(data-toggle='site-menu', data-target='.site')
          a.header__brand.brand(href=relative("/index.html"))
            .brand__logo
          .header__meta
            .header__meta__upper
              // ko if: hasGitHubIntegration
              .header__meta__action
                // ko if: !github.isSignedIn()
                .header__action
                  img(src='https://www.scopevisio.com/sites/all/themes/scopevisio/images/loading.gif', data-bind='visible: github.isAuthenticating()').menu__link.docs-github-loading
                  a(data-bind="visible: !github.isAuthenticating(), attr: { href: github.getAuthUrl() }").header__action__button Sign in with GitHub
                // /ko
                // ko if: github.isSignedIn()
                .header__action
                  img(src='https://www.scopevisio.com/sites/all/themes/scopevisio/images/loading.gif', data-bind='visible: github.isAuthenticating()').menu__link
                  a(href=config.repository.url, data-bind='visible: !github.isAuthenticating() && github.isActiveMember()').menu__link.icon.icon--github.docs-github-icon
                // /ko
              // /ko
              .header__meta__menu
                - var segments = []
                - segments.push({ name: 'Design Guidelines', slug: 'design', path: '/design/fundamentals/index.html' })
                - segments.push({ name: 'Developer Toolkit', slug: 'development', path: '/development/fundamentals/index.html' })
                - segments.push({ name: 'Examples', slug: 'examples', path: '/examples/index.html' })

                ul.menu.menu--meta
                  each s in segments
                    li.menu__item(
                      class={'is-active': segment == s.slug}
                    )
                      a.menu__link(
                        href=relative(s.path)
                        class={'is-active': segment == s.slug}
                      )= s.name
            .header__meta__lower
              .header__meta__welcome
                div
                  .header__meta__welcome__main
                    if segment == 'design'
                      span Design Guidelines
                    else if segment == 'development'
                      span Developer Toolkit
                    else if segment == 'examples'
                      span Examples
                    else
                      span Web Design Guide

                  // ko if: github.isSignedIn()
                  .header__meta__welcome__secondary
                    // ko text: github.user().login
                    // /ko
                  // /ko

        if menu
          .header__menu
            .l-container
              ul.menu.menu--main
                each item in config[menu]
                  - var page = getFirstPage(item);
                  - var isActive = topLevel == item
                  if page
                    li.menu__item(
                      class={'is-active': isActive}
                    )
                      a.menu__link(
                      href=relative(page.link)
                      )= item.name

      div!= contents

      footer.footer
        .footer__content
        .footer__copyline
          .l-container
            ul.menu.menu--copyline
              li.menu__item
                a(href=relative('/changelog.html')).menu__link Changelog
              li.menu__item
                span.menu__link AXA 2015 Â©

    .site__mobile-menu
      .site__mobile-menu__header
        if segment == 'design'
          h1.site__mobile-menu__title Design Guidelines
        else if segment == 'development'
          h1.site__mobile-menu__title Developer Toolkit
        else if segment == 'examples'
          h1.site__mobile-menu__title Examples
        else
          h1.site__mobile-menu__title Web Design Guide
        // ko if: github.isSignedIn()
        p.site__mobile-menu__user
          // ko text: github.user().login
          // /ko
        // /ko
      nav#menu-mobile.menu.menu--sliding
        ul.menu__level
          li.menu__item
            a.menu__link(
              href=relative('/index.html')
              data-link='/index.html'
            ) Overview

          - var menus = []
          - menus.push({ name: "design", label: "Design Guidelines"});
          - menus.push({ name: "development", label: "Developer Toolkit" });

          each m in menus
            li.menu__item
              a.menu__link.menu__link--parent(
                href='#'
              )= m.label

              mixin pageLink(page)
                li.menu__item
                  a.menu__link(
                    href=relative(page.link)
                    data-link=page.link
                  )= page.title

              ul.menu__level
                li.menu__item.menu__item--back
                  a.menu__link.menu__link--back(
                    href='#'
                  )= m.label

                - // Top level
                each topLevel in config[m.name]
                  li.menu__item
                    a.menu__link.menu__link--parent(
                      href='#'
                    )= topLevel.name

                    - // Top level back

                    ul.menu__level
                      li.menu__item.menu__item--back
                        a.menu__link.menu__link--back(
                          href='#'
                        )= topLevel.name

                      - // Top level pages
                      - var collection = collections[pathName([topLevel.name], m.name)]
                      if collection
                        each page in collection
                          mixin pageLink(page)

                      - // Top level children
                      if topLevel.children
                        each secondLevel in topLevel.children

                          - var path = [topLevel.name, secondLevel.name]
                          - var collection = collections[pathName(path, m.name)]

                          if collection && collection.length > 0
                            - // Second level
                            li.menu__item
                              a.menu__link.menu__link--parent(
                                href='#'
                              )= secondLevel.name

                              - // Second level back
                              ul.menu__level
                                li.menu__item.menu__item--back
                                  a.menu__link.menu__link--back(
                                    href='#'
                                  )= secondLevel.name

                                - // Second level pages
                                if collection
                                  each page in collection
                                    mixin pageLink(page)

          li.menu__item
            a.menu__link(
              href=relative('/examples')
              data-link='/examples/index.html'
            ) Examples

    script(type='text/javascript').
      // Set the right mobile menu level as current
      var $menu = $("#menu-mobile");
      var $level = $menu.find("[data-link='!{link}']").closest('.menu__level');

      $menu.slidingMenu();
      $menu.slidingMenu('level', $level);

      // Highlight the right mobile menu link as active
      $menu.find("[data-link='!{link}']").addClass('is-active')

      // Setup the fancy GitHub integration
      var viewModel = new MainViewModel(!{JSON.stringify(config)});
      ko.applyBindings(viewModel);
      viewModel.init();
// Copyright AXA Versicherungen AG 2015
